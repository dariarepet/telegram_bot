from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

TOKEN = "8004644159:AAHpTPScjFTiI45zG7uUbJh4q41xNrLupXU"  # –õ—É—á—à–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
ADMIN_ID = 1267693167  # –¢–≤–æ–π Telegram ID –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤

# –ö–Ω–æ–ø–∫–∏ –∏ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –Ω–∏—Ö
buttons = [
    ["‚ÑπÔ∏è –û–±–æ –º–Ω–µ", "üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ"],
    ["üí≥ –ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã", "üéì –Ø —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä, —Ö–æ—á—É –∫—É—Ä—Å"],
    ["‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]
]

messages = {
    "‚ÑπÔ∏è –û–±–æ –º–Ω–µ": "üìö –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–±–æ –º–Ω–µ: https://daria-emelianova.yonote.ru/share/rus",
    "üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ": "üìù –ê–Ω–∫–µ—Ç–∞ –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ: https://forms.yandex.ru/u/683ad41feb61464bc78c1b3e",
    "üí≥ –ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã": "üí≥ –ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã: https://daria-emelianova.yonote.ru/share/abonement",
    "üéì –Ø —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä, —Ö–æ—á—É –∫—É—Ä—Å": "üéì –ö—É—Ä—Å –¥–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤: https://daria-emelianova.yonote.ru/share/kabinet"
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "–∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å"
user_question_state = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text(
        "–Ø –±–æ—Ç –î–∞—Ä—å–∏ –ï–º–µ–ª—å—è–Ω–æ–≤–æ–π. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=reply_markup
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    text = update.message.text

    if text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        user_question_state[user_id] = True
        await update.message.reply_text("–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø—Ä—è–º–æ –∑–¥–µ—Å—å, —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –î–∞—Ä—å–µ.")
        return

    if user_question_state.get(user_id, False):
        user_info = update.message.from_user
        username = user_info.username or user_info.first_name
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=f"–í–æ–ø—Ä–æ—Å –æ—Ç @{username} ({user_info.first_name}): {text}"
        )
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –Ø –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –î–∞—Ä—å–µ.")
        user_question_state[user_id] = False
        return

    if text in messages:
        await update.message.reply_text(messages[text])
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –∏–∑ –º–µ–Ω—é.")

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_polling()

if __name__ == "__main__":
    main()
